import java.util.*;
class Solution { 
    public static ArrayList<Integer> topoSort(int V, int[][] edges) { 
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < V; i++) { 
            adj.add(new ArrayList<>());
        }
        for (int[] edge : edges) { 
            adj.get(edge[0]).add(edge[1]);
        }
        int[] indegree = new int[V];
        for (int i = 0; i < V; i++) { 
            for (int nbr : adj.get(i)) { 
                indegree[nbr]++;
            }
        }
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < V; i++) { 
            if (indegree[i] == 0) { 
                q.add(i);
            }
        }
        ArrayList<Integer> topoOrder = new ArrayList<>();
        while (!q.isEmpty()) { 
            int node = q.poll();
            topoOrder.add(node);
            for (int nbr : adj.get(node)) { 
                indegree[nbr]--;
                if (indegree[nbr] == 0) { 
                    q.add(nbr);
                }
            }
        }
        return topoOrder;
    }
}
