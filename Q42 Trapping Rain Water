class Solution {
    public int trap(int[] height) {
        int n = height.length;

        int pref[] = new int[n];
        int suff[] = new int[n];

        pref[0]  = height[0];
        suff[n-1] = height[n-1];

        int lmax = height[0];
        int rmax = height[n-1];

        for(int i=1; i<n; i++) {
            if(height[i] > lmax) {
                lmax = height[i];
            }
                pref[i] = lmax;
        }

        for(int i=n-2; i>=0; i--) {
            if(height[i] > rmax) {
                rmax = height[i];
            }
                suff[i] = rmax;
        }

        int ans=0;
        for(int i=0; i<n; i++) {
            int min = Math.min(pref[i], suff[i]);
            ans += Math.abs(min-height[i]);
        }
        return ans;
    }
}
